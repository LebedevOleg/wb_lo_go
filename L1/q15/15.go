package main

import (
	"fmt"
)

var justString string

func someFunc() {
	//* Из условия не ясно, что именно возвращает функция createHugeString, я буду действо вать из предположения что ф-ция возвращает строку
	//? v := createHugeString(1 << 10) вернул строку
	//* 1-ое   v - string
	v := "Я вернулся из createHugeString, и я хочу чтобы была ошибка в следующей строке"
	//! здесь мы можем столкнуться с ошибкой выхода за пределы среза
	//! justString = v[:100]
	//* чтобы это исправить надо заранее знать максимальное колличество символов, которое возвращает функция
	//* например функция возвращает максимум 10 символов, или остальное в этой ф-ции не важно
	justString = v[:10]
	fmt.Println(justString)
	//! так же важно отметить, что строка в данном случае рассматривается как набор битов, а значит будет потеря при обрезании строки (далее)
	//* 2-ое v - string
	//* Сейчас интерисует, как не потерять часть данных в конце строки при обрезании ее
	strArr := []rune(v)              //* строку надо перевести в срез rune и тогда символы не потеряются
	justString = string(strArr[:12]) //* string([]rune(v)[:10]) - запись без доп переменной
	fmt.Println(justString)

}

func main() {
	someFunc()
}
